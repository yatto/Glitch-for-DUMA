### LICENSE:
#
# Copyright (C) 2011 Ahmad Amarullah ( http://amarullz.com/ )
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
### FILE INFO:
#
# AROMA Installer 2.70 - AROMA Installer Test Script Configuration
#       (c) 2011-2012 by Ahmad Amarullah
#           amarullz - xda-developers
#           http://www.amarullz.com/
#
#       Binary Version  : 2.70B
#       Binary Codename : Flamboyan
#
### INFO:
#
# * AROMA Resource Dir  = META-INF/com/google/android/aroma
#
# * AROMA Temporary Dir = /tmp/aroma/

ini_set("rom_name",             "Glitch kernel");
ini_set("rom_version",          "N7-AOSP");
ini_set("rom_author",           "Tk-Glitch");
ini_set("rom_device",           "Nexus 7 (2013)");
ini_set("rom_date",             "August  1 2016");

ini_set("force_colorspace","rgba");
#ini_set("dp","6");

fontresload( "0", "ttf/Roboto-Regular.ttf", "12" );
fontresload( "1", "ttf/Roboto-Regular.ttf", "18" ); 
theme("miui4");

splash(1500, "glitch");

viewbox(
    "Welcome",
    "You are about to flash <b>"+
	  ini_get("rom_name")+
	"</b>\nfor <b>"+ini_get("rom_device")+"</b>.\n\n"+
    
	
      "  VERSION\t: <b><#selectbg_g>"+ini_get("rom_version")+"</#></b>\n"+
      "  AUTHOR \t: <b><#selectbg_g>"+ini_get("rom_author")+"</#></b>\n"+
      "  RELEASED\t: <b><#selectbg_g>"+ini_get("rom_date")+"</#></b>\n\n\n"+

    "Press Next to Continue...",
    "@welcome"
);

agreebox("Terms Of Use","Please read the Glitch kernel Terms of Use...","themes/miui4/icon.agreement",
   "" + readfile_aroma("agreement.txt"),
   "I Agree with these Terms Of Use...",
   "Please check the box..."
);

selectbox(
  "Keep your Glitch settings ?","New user? Coming back? Already using this kernel?\n","@personalize","glitched.prop",
  "I want to make a fresh installation, please.","(wipes previous Glitch settings if any)",1,
  "I'm already Glitch'd, just try to keep my settings, thx.","",0
);

if file_getprop("/tmp/aroma/glitched.prop","selected.0") == "1"
then

selectbox(
  "CPU Settings","","","cpu.prop",

  "Set each CPU core frequency separately","",2,
  "No","(recommended)",1,
  "Yes","Gives the option to set the max freq for each core individually",0,

  "CPU optimization level","",2,
  "stock","(1.13GHz-4.26GBps)",0,
  "improved","(1.19GHz-4.26GBps)",1,
  "balanced","(1.22GHz-4.66GBps)",0,
  "fast","(1.35GHz-4.66GBps)",0,
  "extreme","(1.43GHz-4.80GBps)",0,
  "glitchy","(1.49GHz-4.80GBps)",0,

  "Hotplug driver","",2,
  "Qualcomm mpdecision","(stock)",0,
  "Fluxi's MSM Hotplug","",1,

  "CPU governor","",2,
  "ondemand","(stock)",0,
  "interactive","",1,
  "smartmax","",0,
  "intellidemand","",0,
  "intelliactive","",0,
  "elementalx","",0,
  "conservative","",0,

  "Minimum CPU Frequency","",2,
  "81MHz","",0,
  "162MHz","",0,
  "270MHz","",0,
  "384MHz","(stock)",1,
  "594MHz","",0,
  "810MHz","",0
);

if file_getprop("/tmp/aroma/cpu.prop","selected.1") == "1"
then
selectbox(
  "Maximum CPU Frequency","Select maximum CPU frequency\n","@info","freq0.prop",
  "1512MHz","(stock)",0,
  "1620MHz","",0,
  "1728MHz","(balanced)",1,
  "1836MHz","",0,
  "1890MHz","(performance)",0,
  "1944MHz","",0,
  "1998MHz","(high)",0,
  "2052MHz","",0,
  "2106MHz","(very high)",0,
  "2160MHz","",0,
  "2214MHz","(extreme)",0,
  "2268MHz","",0,
  "2322MHz","(glitchy)",0
);
endif;

if file_getprop("/tmp/aroma/cpu.prop","selected.1") == "2"
then
selectbox(
  "Maximum CPU Frequency","Select maximum frequency for first CPU core\n","@menu","freq0.prop",
  "1512MHz","(stock)",0,
  "1620MHz","",0,
  "1728MHz","(balanced)",1,
  "1836MHz","",0,
  "1890MHz","(performance)",0,
  "1944MHz","",0,
  "1998MHz","(high)",0,
  "2052MHz","",0,
  "2106MHz","(very high)",0,
  "2160MHz","",0,
  "2214MHz","(extreme)",0,
  "2268MHz","",0,
  "2322MHz","(glitchy)",0
);

selectbox(
  "Maximum CPU Frequency","Select maximum frequency for second CPU core\n","@menu","freq1.prop",
  "1512MHz","(stock)",0,
  "1620MHz","",0,
  "1728MHz","(balanced)",1,
  "1836MHz","",0,
  "1890MHz","(performance)",0,
  "1944MHz","",0,
  "1998MHz","(high)",0,
  "2052MHz","",0,
  "2106MHz","(very high)",0,
  "2160MHz","",0,
  "2214MHz","(extreme)",0,
  "2268MHz","",0,
  "2322MHz","(glitchy)",0
);

selectbox(
  "Maximum CPU Frequency","Select maximum frequency for third CPU core\n","@menu","freq2.prop",
  "1512MHz","(stock)",0,
  "1620MHz","",0,
  "1728MHz","(balanced)",1,
  "1836MHz","",0,
  "1890MHz","(performance)",0,
  "1944MHz","",0,
  "1998MHz","(high)",0,
  "2052MHz","",0,
  "2106MHz","(very high)",0,
  "2160MHz","",0,
  "2214MHz","(extreme)",0,
  "2268MHz","",0,
  "2322MHz","(glitchy)",0
);

selectbox(
  "Maximum CPU Frequency","Select maximum frequency for fourth CPU core\n","@menu","freq3.prop",
  "1512MHz","(stock)",0,
  "1620MHz","",0,
  "1728MHz","(balanced)",1,
  "1836MHz","",0,
  "1890MHz","(performance)",0,
  "1944MHz","",0,
  "1998MHz","(high)",0,
  "2052MHz","",0,
  "2106MHz","(very high)",0,
  "2160MHz","",0,
  "2214MHz","(extreme)",0,
  "2268MHz","",0,
  "2322MHz","(glitchy)",0
);
endif;

selectbox(
  "Thermal & battery related Settings","","","nrg.prop",

  "Thermal settings","",2,
  "run cool","more thermal throttling",0,
  "default","default thermal throttling",1,
  "run hot","less thermal throttling",0,

  "Battery life eXtender settings","",2,
  "4.3V","(100% - stock)",1,
  "4.2V","(93% - balanced)",0,
  "4.1V","(83% - conservative)",0,
  "4.0V","(73% - very conservative)",0,

  "CPU lowfreqs undervolting (384MHz & lower)","",2,
  "No undervolting","(Stock)",0,
  "Undervolt -50 mV","",1,
  "Undervolt -75 mV","",0,
  "Undervolt -100 mV","",0,
  "Undervolt -125 mV","",0,
  "Undervolt -150 mV","",0,
  "Undervolt -175 mV","",0,

  "GPU undervolting","",2,
  "No undervolting","(stock)",0,
  "Undervolt -25mV","",1,
  "Undervolt -50mV","",0,
  "Undervolt -75mV","",0,
  "Undervolt -100mV","",0,
  "Undervolt -125mV","",0,
  "Undervolt -150mV","",0
);

selectbox(
  "GPU Settings","","","gpu.prop",

  "Select maximum GPU frequency","",2,
  "320MHz","(powersaving)",0,
  "400MHz","(stock)",0,
  "450MHz","(improved)",1,
  "504MHz","(balanced)",0,
  "545MHz","(fast)",0,
  "600MHz","(extreme)",0,
  "627MHz","(glitchy)",0,

  "Select GPU governor","",2,
  "Ondemand","(recommended)",1,
  "Simple","",0

);

selectbox(
  "Storage Settings","","","disk.prop",

  "I/O scheduler","",2,
  "cfq","(stock)",0,
  "fiops","",0,
  "sio","",0,
  "deadline","",1,
  "noop","",0,
  "bfq","",0,
  "zen","",0,

  "Read-ahead buffer size","",2,
  "128 KB","(stock)",1,
  "256 KB","",0,
  "512 KB","",0,
  "1024 KB","",0,
  "2048 KB","",0
);

selectbox(
  "Sweep2Wake and DoubleTap2Wake","","","wg.prop",
  "S2W/DT2W","Sweep or double tap to wake tablet",1,
  "Disable S2W/DT2W","",0
);

if file_getprop("/tmp/aroma/wg.prop","selected.0") == "1" 
then

checkbox(
  "Gesture Options","<b>Customize Sweep2Wake and DoubleTap2Wake</b>","","gest.prop",
  
  "Available Gestures:","",2,
  "Sweep right","",1,
  "Sweep left","",1,
  "Sweep up","",1,
  "Sweep down","",1,
  "Double tap","",1,

  "Other Options","",2,
  "Short sweep","Enable shorter sweep distance for S2W",1,
  "Power button toggles S2W/DT2W","Turn screen off with power button to temporarily disable S2W/DT2W. S2W/DT2W are re-enabled next time the screen comes on",0,
  "Magnetic cover toggles S2W/DT2W","S2W/DT2W is disabled when magnetic cover is closed",1,
  "Wake Timeout","Disable S2W/DT2W after a specified period of time",0
);

if file_getprop("/tmp/aroma/gest.prop","item.1.1") == "0" 
  && file_getprop("/tmp/aroma/gest.prop","item.1.2") == "0"
  && file_getprop("/tmp/aroma/gest.prop","item.1.3") == "0"
  && file_getprop("/tmp/aroma/gest.prop","item.1.4") == "0"
  && file_getprop("/tmp/aroma/gest.prop","item.1.5") == "0"
then
alert(
  "PLEASE NOTE:",
  "You didn't enable any gestures",
  "@alert",
  "OK"
);
back("1");
endif;

if file_getprop("/tmp/aroma/gest.prop","item.2.4") == "1" 
then
selectbox(
  "S2W/DT2W timeout","<b>Select timeout length</b>\nS2W and DT2W will be disabled after this length of time to save battery.","@info","timeout.prop",
  "15 minutes","",0,
  "30 minutes","",0,
  "60 minutes","(default)",1,
  "90 minutes","",0,
  "120 minutes","",0
);
endif;
endif;

checkbox(
  "Sweep2Sleep","<b>Sweep left across navbar area to put phone to sleep</b>\nThis feature does NOT drain battery","","s2s.prop",

  "Available Gestures:","",2,
  "Enable Sweep2Sleep","",1,

  "Sweep2Sleep Options:","",2,
  "Disable sweep2sleep in landscape mode","",1,
  "Disable sweep2sleep in portrait mode","",0
);

if file_getprop("/tmp/aroma/s2s.prop","item.2.1") == "1" 
  && file_getprop("/tmp/aroma/s2s.prop","item.2.2") == "1"
then
alert(
  "PLEASE NOTE:",
  "You might as well disable sweep2sleep.  Choose disable in landscape OR disable in portrait, not both.",
  "@alert",
  "OK"
);
back("1");
endif;

checkbox(
  "Other settings","<b>Select the mods you want to install</b>","@personalize","misc.prop",
  "Enable USB fastcharge","",1,
  "Disable magnetic cover on/off","",0,
  "Enable USB OTG+Charge mode","Allows charging in USB host mode (disables self-powered OTG)",0,
  "Enable Backlight dimmer","Lower lowest screen brightness (may cause black screen on auto-brightness with some display revisions)",0,
  "Enable max suspend frequency","",1,
  "Enable max MC power savings","",0,
  "Enable Permissive SELinux","",0,
  "Disable fsync","Faster i/o, but slight risk of data loss",0
);

if file_getprop("/tmp/aroma/misc.prop","item.0.5") == "1"
then

selectbox(
  "Max screen off CPU Frequency","Select max CPU frequency when the screen is off\n","@personalize","maxscroff.prop",
  "594MHz","",0,
  "702MHz","",0,
  "810MHz","",0,
  "1026MHz","",1,
  "1242MHz","",0
);
endif;
endif;

if file_getprop("/tmp/aroma/glitched.prop","selected.0") == "2"
then
alert(
  "NOTE:",
  "You MUST already have either Glitch kernel installed and running on this device or a backup of your settings on your SDcard root. Else, a default profile will be used.",
  "@alert",
  "OK"
);
endif;

menubox(
  "Glitch Kernel Installer",
  "Ready to install",
  "@info",
  "menu.prop",
  "I want to Glitch my device, install it now !","","@install",
  "Abort installation","","@default"
);

if prop("menu.prop","selected")=="2"
then
  exit("");
endif;

setvar("retstatus",
install(
  "Installing",
  "Installing Glitch Kernel...\nPlease wait...",
  "@install")
);

ini_set("text_next", "Finish");

if getvar("retstatus")=="0" then
  viewbox(
  "Installation Completed",
  "<#080>Congratulations !</#>\n\n"+
  "Glitch kernel has been installed successfully!\n\n"+
  "Please let your device boot completely to let Cthulhu do his work...\n\n"+
  "Enjoy!",
  "@info"
);
else
   viewbox("Installation Failed","\n\nInstaller Status: "+ getvar("retstatus"),"@alert");
endif;

