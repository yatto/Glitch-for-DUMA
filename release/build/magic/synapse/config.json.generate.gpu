cat << CTAG
{
	name:GPU & DISPLAY,
		elements:[
			{ SPane:{
				title:"Current GPU Frequency:"
			}},
				{ SLiveLabel:{
					refresh:1000,
					action:"live GPUFrequency"
				}},
			{ SPane:{
				title:"GPU Frequency Scaling",
			}},
			`if [ -f "\`sh $DEVICE DirGPUMaxFrequency\`" ]; then
			GPUMAX=\`sh $DEVICE DirGPUMaxFrequency\`
				$BB echo '{ SSeekBar:{
					title:"GPU Max Frequency",
					description:"Set the maximum frequency the GPU scales up to.",
					default:'\`$BB cat $GPUMAX\`',
					action:"generic '$GPUMAX'",
					values:{
						'\`sh $DEVICE GPUFrequencyList\`'
					}
			}},'
				fi`
			`if [ -f "\`sh $DEVICE DirGPUGovernor\`" ]; then
			GPUGOV=\`sh $DEVICE DirGPUGovernor\`
				$BB echo '{ SPane:{
					title:"GPU Governor",
					description:"The GPU Governor makes scaling decisions based on specific algorithm for 2D/3D scenarios."
				}},
					{ SOptionList:{
						default:'\`sh $DEVICE DefaultGPUGovernor\`',
						action:"gpuset '$GPUGOV'",
						values:[ "ondemand", "simple", "performance" ],
					}},'
			fi`
			`SGA=/sys/module/msm_kgsl_core/parameters;
			if [ -f "$SGA/simple_laziness" ] || [ -f "$SGA/simple_ramp_threshold" ] || [ -d "/sys/module/simple_gpu_algorithm/parameters" ]; then

			[ -d "/sys/module/simple_gpu_algorithm/parameters" ] && SGA=/sys/module/simple_gpu_algorithm/parameters;
			
				$BB echo '{ SPane:{
					title:"Simple Governor Tunables"
				}},'
				if [ -f "$SGA/simple_gpu_activate" ]; then
					SIMPLE=\`$BB cat $SGA/simple_gpu_activate\`
					$BB echo '{ SCheckBox:{
						label:"Enable",
						default:'$SIMPLE',
						action:"generic '$SGA'/simple_gpu_activate"
					}},'
				fi
				if [ -f "$SGA/simple_laziness" ]; then
					LAZ=\`$BB cat $SGA/simple_laziness\`
					$BB echo '{ SSeekBar:{
						title:"Laziness",
						description:"Adjusts the number of times the governor skips ramp down requests. Higher = better performance (more battery drain).",
						default:'$LAZ',
						action:"generic '$SGA'/simple_laziness",
						min:0,
						max:10,
						step:1
					}},'
				fi
				if [ -f "$SGA/simple_ramp_threshold" ]; then
					RAMP=\`$BB cat $SGA/simple_ramp_threshold\`
					$BB echo '{ SSeekBar:{
						title:"Ramp Threshold",
						description:"Adjusts the threshold to ramp up or down GPU frequencies. Lower = better performance (more battery drain).",
						default:'$RAMP',
						action:"generic '$SGA'/simple_ramp_threshold",
						min:0,
						max:10000,
						step:1000
					}},'
				fi
			fi`
			`if [ -f "/sys/module/adreno_idler/parameters/adreno_idler_active" ]; then
				AD=\`bool /sys/module/adreno_idler/parameters/adreno_idler_active\`
				$BB echo '{ SPane:{
				title:"Adreno Idler"
				}},
					{ SCheckBox:{
						label:"Enable Adreno Idler (Experimental)",
						description:"Adreno idler replaces GPU algorithm for calculating idle frequency. It bumps GPU to idle frequency when GPU is not under high load and reduces power consumption.",
						default:'$AD',
						action:"boolean /sys/module/adreno_idler/parameters/adreno_idler_active"
					}},'
			fi`
			`if [ -f "/sys/devices/system/cpu/cpufreq/vdd_table/vdd_levels_GPU" ]; then
				$BB echo '{ SPane:{
					title:"GPU Voltages for low, nominal and high steps"
				}},'
					while read UVOLT UNIT; do
					VOLTAGE=$(($VOLTAGE+1));
						$BB echo '{ SSeekBar:{
							default:'$UVOLT',
							title:"Voltage '${VOLTAGE}'",
							action:"voltage gpuvolt '${VOLTAGE}'",
							unit:"' ${UNIT}'",'
								$BB echo 'min:900000, max:1200000, step:5000 }},'
					done < /sys/devices/system/cpu/cpufreq/vdd_table/vdd_levels_GPU
			fi`
			`if [ -d "/sys/devices/platform/kcal_ctrl.0" ]; then
				if [ -f "/sys/devices/platform/kcal_ctrl.0/kcal" ]; then
				KCAL=\`$BB cat /sys/devices/platform/kcal_ctrl.0/kcal\`;
					$BB echo '{ SPane:{
						title:"Display Tuning",
					}},
						{ SGeneric:{
							title:"RGB colors tuning",
							description:"Here you can set the values per color channels (RGB, 0-256). Be aware that CyanogenMod 14.1 PCC will change these values depending on your LiveDisplay settings.",
							default:'$KCAL',
							action:"gamma /sys/devices/platform/kcal_ctrl.0/kcal",
						}},'
				fi
			fi`
			`if [ -f "/sys/module/msm_fb/parameters/backlight_dimmer" ]; then
 			BLKD=\`$BB cat /sys/module/msm_fb/parameters/backlight_dimmer\`;
 				$BB echo '{ SPane:{
 					title:"Backlight Dimmer Control"
 				}},
 					{ SSeekBar:{
 						description:"Allows you to adjust the LCD screen brightness lower than is possible with stock. Be careful, you can lower the brightness so much you can barely see it.",
 						step:1,
 						min:0,
 						max:100,
 						default:'$BLKD',
 						action:"generic /sys/module/msm_fb/parameters/backlight_dimmer"
 					}},'
 			fi`
		]
}
CTAG
